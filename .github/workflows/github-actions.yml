name: Continuous integration/Continuous deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Build project
        run: mvn clean install

      - name: Run tests
        run: mvn verify -Dspring.profiles=test

      - name: Generate JaCoCo reports
        run: mvn test -Dspring.profiles=test

      - name: Upload JaCoCo reports
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports
          path: back/target/site/jacoco/*

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:ci

      - name: Generate Karma reports
        run: npm run test -- --no-watch --code-coverage

      - name: Upload Karma reports
        uses: actions/upload-artifact@v4
        with:
          name: karma-reports
          path: front/coverage/bobapp/*

  deploy:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests, SonarQube-Analysis-backend, SonarQube-Analysis-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Angular Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bobappfront:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/bobappfront:${{github.run_number}}

      - name: Build and push Spring Boot Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bobappback:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/bobappback:${{github.run_number}}
  SonarQube-Analysis-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
         working-directory: back
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Java JDK 
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "${{ secrets.SONAR_HOST_URL }}"
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \ 
           -Dsonar.projectKey=Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
           -Dsonar.projectName='Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD'

  SonarQube-Analysis-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dependencies
        run: npm install
      - name: install scanner
        run: npm install -g sonarqube-scanner
      - name: Run Sonar scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Projet10-Frontend \
            -Dsonar.projectName='Projet10 Frontend' \
            -Dsonar.sources=./src \
          